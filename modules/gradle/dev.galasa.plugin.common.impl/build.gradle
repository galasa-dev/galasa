plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

repositories {
    maven {
       url "$sourceMaven"
    }
    mavenLocal()
    maven {
       url "$centralMaven"
    }
}

dependencies {
    implementation platform('dev.galasa:dev.galasa.platform:'+version)
    implementation 'com.google.code.gson:gson'
    implementation 'commons-codec:commons-codec'
	implementation 'commons-io:commons-io'
    implementation 'org.apache.httpcomponents:httpcore'
    implementation 'org.apache.httpcomponents:httpclient'
    testImplementation 'junit:junit'
    // Overriding version 3.16.1 suggested by the Platform - as upgrading the other projects
    // to higher versions caused unit test failures. Fixes for this to be completed in a future story.
	testImplementation 'org.assertj:assertj-core'
    implementation project(':dev.galasa.plugin.common')
    testImplementation project(':dev.galasa.plugin.common.test')
}

java {
    withJavadocJar()
    withSourcesJar()
}
    
tasks.withType(Javadoc) {
    failOnError = false
    enabled = true
}


signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications
}



tasks.withType(Sign) {
    onlyIf { isMainOrRelease.toBoolean() }
}



publishing {
    afterEvaluate {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }

            withType(MavenPublication) {
                pom {
                    url = 'https://galasa.dev'
                    name = 'Galasa Gradle Plugins'
                    description = 'This project contains code common to plugins'
                    licenses {
                        license {
                            name = 'Eclipse Public License - v 2.0'
                            url = 'https://www.eclipse.org/legal/epl-2.0'
                        }
                    }
                    developers {
                        developer {
                            name = 'Galasa Contributors'
                            email = 'galasadelivery@ibm.com'
                            organization = 'Linux Foundation'
                            organizationUrl = 'https://github.com/galasa-dev'
                        }
                    }
                    scm {
                        connection = 'scm:git:git:://github.com/galasa-dev/galasa'
                        developerConnection = 'scm:git:git:://github.com/galasa-dev/galasa'
                        url = 'https://github.com/galasa-dev/galasa'
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/galasa-dev/projectmanagement/issues'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url  = "$targetMaven"
            
            if ("$targetMaven".startsWith('http')) {
                credentials {
                    username System.getenv("GITHUB_ACTOR")
                    password System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }

}

