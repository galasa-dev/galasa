#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: Check Required Secrets Configured

# This is a reusable workflow which checks if the required secrets for workflows have been configured.
# The calling workflow should set the inputs below based on which secrets it needs.
# Then this workflow will check if that secret is set in the workflow's repository.
# It then reports all missing secrets in the last step if it finds any. 

on:
  workflow_call:
    inputs:
      check_write_github_packages_username:
        description: 'True if the secret WRITE_GITHUB_PACKAGES_USERNAME is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
      check_write_github_packages_token:
        description: 'True if the secret WRITE_GITHUB_PACKAGES_TOKEN is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
      check_read_github_packages_username:
        description: 'True if the secret READ_GITHUB_PACKAGES_USERNAME is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
      check_read_github_packages_token:
        description: 'True if the secret READ_GITHUB_PACKAGES_TOKEN is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
      check_gpg_key:
        description: 'True if the secret GPG_KEY is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
      check_gpg_keyid:
        description: 'True if the secret GPG_KEYID is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
      check_gpg_passphrase:
        description: 'True if the secret GPG_PASSPHRASE is needed for the calling workflow'
        required: false
        default: 'false'
        type: string
    secrets:
      WRITE_GITHUB_PACKAGES_TOKEN:
        description: 'A GitHub token passed from the caller workflow to validate'
        required: false
      READ_GITHUB_PACKAGES_TOKEN:
        description: 'A GitHub token passed from the caller workflow to validate'
        required: false
      GPG_KEY:
        description: 'A GPG key payload passed from the caller workflow to validate'
        required: false
      GPG_KEYID:
        description: 'A GPG key ID passed from the caller workflow to validate'
        required: false
      GPG_PASSPHRASE:
        description: 'A GPG key passphrase passed from the caller workflow to validate'
        required: false

jobs:
  check-required-secrets-configured:
    name: Check Required Secrets Configured
    runs-on: ubuntu-latest

    steps:
      - name: Check if WRITE_GITHUB_PACKAGES_USERNAME is set in this repository
        if: ${{ inputs.check_write_github_packages_username == 'true' }}
        continue-on-error: true
        env:
          WRITE_GITHUB_PACKAGES_USERNAME: ${{ vars.WRITE_GITHUB_PACKAGES_USERNAME }}
        run: |
          if [ -z "${WRITE_GITHUB_PACKAGES_USERNAME}" ] || [ "${WRITE_GITHUB_PACKAGES_USERNAME}" = "" ]; then
            echo "WRITE_GITHUB_PACKAGES_USERNAME is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "WRITE_GITHUB_PACKAGES_USERNAME is set."
          fi
        id: check-write-github-packages-username

      - name: Check if WRITE_GITHUB_PACKAGES_TOKEN is set in this repository
        if: ${{ inputs.check_write_github_packages_token == 'true' }}
        continue-on-error: true
        env:
          WRITE_GITHUB_PACKAGES_TOKEN: ${{ secrets.WRITE_GITHUB_PACKAGES_TOKEN }}
        run: |
          if [ -z "${WRITE_GITHUB_PACKAGES_TOKEN}" ] || [ "${WRITE_GITHUB_PACKAGES_TOKEN}" = "" ]; then
            echo "WRITE_GITHUB_PACKAGES_TOKEN is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "WRITE_GITHUB_PACKAGES_TOKEN is set."
          fi
        id: check-write-github-packages-token

      - name: Check if READ_GITHUB_PACKAGES_USERNAME is set in this repository
        if: ${{ inputs.check_read_github_packages_username == 'true' }}
        continue-on-error: true
        env:
          READ_GITHUB_PACKAGES_USERNAME: ${{ vars.READ_GITHUB_PACKAGES_USERNAME }}
        run: |
          if [ -z "${READ_GITHUB_PACKAGES_USERNAME}" ] || [ "${READ_GITHUB_PACKAGES_USERNAME}" = "" ]; then
            echo "READ_GITHUB_PACKAGES_USERNAME is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "READ_GITHUB_PACKAGES_USERNAME is set."
          fi
        id: check-read-github-packages-username

      - name: Check if READ_GITHUB_PACKAGES_TOKEN is set in this repository
        if: ${{ inputs.check_read_github_packages_token == 'true' }}
        continue-on-error: true
        env:
          READ_GITHUB_PACKAGES_TOKEN: ${{ secrets.READ_GITHUB_PACKAGES_TOKEN }}
        run: |
          if [ -z "${READ_GITHUB_PACKAGES_TOKEN}" ] || [ "${READ_GITHUB_PACKAGES_TOKEN}" = "" ]; then
            echo "READ_GITHUB_PACKAGES_TOKEN is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "READ_GITHUB_PACKAGES_TOKEN is set."
          fi
        id: check-read-github-packages-token

      - name: Check if GPG_KEY is set in this repository
        if: ${{ inputs.check_gpg_key == 'true' }}
        continue-on-error: true
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
        run: |
          if [ -z "${GPG_KEY}" ] || [ "${GPG_KEY}" = "" ]; then
            echo "GPG_KEY is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "GPG_KEY is set."
          fi
        id: check-gpg-key

      - name: Check if GPG_KEYID is set in this repository
        if: ${{ inputs.check_gpg_keyid == 'true' }}
        continue-on-error: true
        env:
          GPG_KEYID: ${{ secrets.GPG_KEYID }}
        run: |
          if [ -z "${GPG_KEYID}" ] || [ "${GPG_KEYID}" = "" ]; then
            echo "GPG_KEYID is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "GPG_KEYID is set."
          fi
        id: check-gpg-keyid

      - name: Check if GPG_PASSPHRASE is set in this repository
        if: ${{ inputs.check_gpg_passphrase == 'true' }}
        continue-on-error: true
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          if [ -z "${GPG_PASSPHRASE}" ] || [ "${GPG_PASSPHRASE}" = "" ]; then
            echo "GPG_PASSPHRASE is not set. See the output of the 'Report missing repository secrets/variables' job below."
            exit 1
          else
            echo "GPG_PASSPHRASE is set."
          fi
        id: check-gpg-passphrase

      - name: Report missing repository secrets/variables
        if: ${{ 
          steps.check-write-github-packages-username.outcome == 'failure' || 
          steps.check-write-github-packages-token.outcome == 'failure' || 
          steps.check-read-github-packages-username.outcome == 'failure' || 
          steps.check-read-github-packages-token.outcome == 'failure' || 
          steps.check-gpg-key.outcome == 'failure' || 
          steps.check-gpg-keyid.outcome == 'failure' || 
          steps.check-gpg-passphrase.outcome == 'failure' 
          }}
        run: |
          if [[ ${{ steps.check-write-github-packages-username.outcome }} == 'failure' ]]; then
            echo "WRITE_GITHUB_PACKAGES_USERNAME is not set. Configure it in the repository variables.\
            It must contain the GitHub username you want to use to log into GitHub Container Registry."
          fi
          if [[ ${{ steps.check-write-github-packages-token.outcome }} == 'failure' ]]; then
            echo "WRITE_GITHUB_PACKAGES_TOKEN is not set. Configure it in the repository secrets.\
            It must contain a GitHub Personal Access Token with write:packages scope\
            that you want to use to log into GitHub Container Registry."
          fi
          if [[ ${{ steps.check-read-github-packages-username.outcome }} == 'failure' ]]; then
            echo "READ_GITHUB_PACKAGES_USERNAME is not set. Configure it in the repository variables.\
            It must contain the GitHub username you want to use to log into GitHub Container Registry."
          fi
          if [[ ${{ steps.check-read-github-packages-token.outcome }} == 'failure' ]]; then
            echo "READ_GITHUB_PACKAGES_TOKEN is not set. Configure it in the repository secrets.\
            It must contain a GitHub Personal Access Token with read:packages scope\
            that you want to use to log into GitHub Container Registry."
          fi
          if [[ ${{ steps.check-gpg-key.outcome }} == 'failure' ]]; then
            echo "GPG_KEY is not set. Configure it in the repository secrets.\
            It must contain Base 64 encoded GPG key payload."
          fi
          if [[ ${{ steps.check-gpg-keyid.outcome }} == 'failure' ]]; then
            echo "GPG_KEYID is not set. Configure it in the repository secrets.\
            It must contain the ID of the GPG key in plain text."
          fi
          if [[ ${{ steps.check-gpg-passphrase.outcome }} == 'failure' ]]; then
            echo "GPG_PASSPHRASE is not set. Configure it in the repository secrets.\
            It must contain the passphrase for the GPG key in plain text."
          fi
          exit 1
